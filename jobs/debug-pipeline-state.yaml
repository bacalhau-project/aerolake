name: debug-pipeline-state
type: ops

tasks:
  - name: debug-state
    engine:
      type: docker
      params:
        image: ghcr.io/bacalhau-project/pipeline-manager:v1.21.0
        entrypoint: ["/bin/bash"]
        parameters:
          - -c
          - |
            echo "=== DEBUGGING PIPELINE STATE ==="
            echo "STATE_DIR: ${STATE_DIR:-/bacalhau_data/state}"
            echo "Current working directory: $(pwd)"
            echo ""
            echo "=== Directory structure ==="
            find /bacalhau_data -name "*.db" -type f 2>/dev/null || echo "No .db files found"
            echo ""
            echo "=== State directory contents ==="
            ls -la /bacalhau_data/state/ 2>/dev/null || echo "No state directory"
            echo ""
            echo "=== Checking pipeline_config.db ==="
            if [ -f "/bacalhau_data/state/pipeline_config.db" ]; then
              echo "✅ Found pipeline_config.db"
              python -c "
            import sqlite3
            conn = sqlite3.connect('/bacalhau_data/state/pipeline_config.db')
            cursor = conn.cursor()
            cursor.execute('SELECT key, value FROM config')
            results = cursor.fetchall()
            print('Database contents:')
            for key, value in results:
                print(f'  {key}: {value}')
            conn.close()
            "
            else
              echo "❌ No pipeline_config.db found"
            fi
            echo ""
            echo "=== Direct pipeline manager get command ==="
            python /app/pipeline_controller.py --config-db /bacalhau_data/state/pipeline_config.db get || echo "Failed to get pipeline state"
    inputSources:
      - source:
          type: localDirectory
          params:
            sourcePath: /bacalhau_data
            readWrite: true
        target: /bacalhau_data

    timeouts:
      queueTimeout: 300